<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Numerics.NET.Data</name>
  </assembly>
  <members>
    <member name="T:Numerics.NET.Data.AutoCategorization">
      <summary>
            Enumerates the options for automatically
            converting data frame columns to categorical
            columns.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.AutoCategorization.None">
      <summary>
            None of the columns are converted.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.AutoCategorization.StringColumns">
      <summary>
            String columns are converted.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.AutoCategorization.DiscreteColumns">
      <summary>
            Discrete columns (booleans, integers) are converted.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.AutoCategorization.All">
      <summary>
            All columns are converted.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.CompositeDataStream`1">
      <summary>
            Specifies the methods and properties of a data file
            that may contain multiple objects.
            </summary>
      <typeparam name="TObject"></typeparam>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Numerics.NET.Data.CompositeDataStream`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Numerics.NET.Data.CompositeDataStream`1.CanAccessByName">
      <summary>
            Gets whether objects in the data stream can be accessed by name.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadAll">
      <summary>
            Reads all objects from the data stream.
            </summary>
      <returns>A dictionary that maps names to objects.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadAllDataFrames">
      <summary>
            Reads all data frames from the data stream.
            </summary>
      <returns>A dictionary that maps names to the corresponding
            data frame that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadAllDataFrames``2">
      <summary>
            Reads all data frames from the data stream.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A dictionary that maps names to the corresponding
            data frame that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadAllMatrices``1(System.Boolean)">
      <summary>
            Reads all matrices with the specified element type from the data stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrices.</typeparam>
      <returns>A dictionary containing the matrices
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadAllVectors``1(System.Boolean)">
      <summary>
            Reads all vectors with the specified element type from the data stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vectors.</typeparam>
      <returns>A dictionary containing the vectors
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadDataFrame(System.String)">
      <summary>
            Reads the data frame with the specified name in the file.
            </summary>
      <param name="name">The name of the matrix to read.</param>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadDataFrame``2(System.String)">
      <summary>
            Reads the data frame with the specified name in the file.
            </summary>
      <param name="name">The name of the matrix to read.</param>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadDataFrames(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the data frames with the specified names from
            the data stream.
            </summary>
      <param name="names">A sequence of names.</param>
      <returns>A dictionary that maps names to the corresponding
            data frame that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadDataFrames``2(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the data frames with the specified names from
            the data stream.
            </summary>
      <param name="names">A sequence of names.</param>
      <returns>A dictionary that maps names to the corresponding
            data frame that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadMatrices``1(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads matrices with the specified names from the data stream.
            </summary>
      <param name="names">A sequence of names of the matrices to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrices.</typeparam>
      <returns>A dictionary containing the matrices
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadMatrix``1(System.String,System.Boolean)">
      <summary>
            Reads the two-dimensional array with the specified name in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <param name="name">The name of the matrix to read.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadObject">
      <summary>
            Reads an object from the data stream.
            </summary>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadObject(System.String)">
      <summary>
            Reads the object with the specified name from the data stream.
            </summary>
      <param name="name">The name of the object.</param>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadSymbol">
      <summary>
            Reads the symbol at the current position in the file.
            </summary>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadVector``1(System.String,System.Boolean)">
      <summary>
            Reads the one-dimensional array with the specified name in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <param name="name">The name of the matrix to read.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.ReadVectors``1(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads vectors with the specified names from the data stream.
            </summary>
      <param name="names">A sequence of names of the vectors to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />, the default).</param>
      <typeparam name="T">The element type of the vectors.</typeparam>
      <returns>A dictionary containing the vectors
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.TryReadObject(`0@)">
      <summary>
            Attempts to read an object from the data stream.
            </summary>
      <param name="item">On return, the object that was read.</param>
      <returns>
        <see langword="true" /> if an item was read successfully;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.TryReadSymbol(System.Collections.Generic.KeyValuePair{System.String,`0}@)">
      <summary>
            Attempts to read a named object from the data stream.
            </summary>
      <param name="symbol">On return, a pair made up of 
            the name of the object that was read and its value.</param>
      <returns>A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 
            with the name of the object as the key and its value
            as the value.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.TryReadSymbolCore(System.Collections.Generic.KeyValuePair{System.String,`0}@)">
      <summary>
            Attempts to read a named object from the data stream.
            </summary>
      <param name="symbol">On return, a pair made up of 
            the name of the object that was read and its value.</param>
      <returns>A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 
            with the name of the object as the key and its value
            as the value.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1},System.String)">
      <summary>
            Writes the data frame with the specified name to the data stream.
            </summary>
      <param name="name">The name of the matrix to read.</param>
      <param name="value">The data frame to write to the stream.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(Numerics.NET.Matrix{``0},System.String)">
      <summary>
            Writes the two-dimensional array with the specified name to the data stream.
            </summary>
      <param name="name">The name of the matrix in the data stream.</param>
      <param name="matrix">The matrix to write to the data stream.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(Numerics.NET.Vector{``0},System.String)">
      <summary>
            Writes the one-dimensional array with the specified name to the data stream.
            </summary>
      <param name="name">The name of the matrix to read.</param>
      <param name="vector">The vector to write to the data stream.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``2(System.Collections.Generic.Dictionary{System.String,Numerics.NET.DataAnalysis.DataFrame{``0,``1}})">
      <summary>
            Writes the specified data frames to the data stream.
            </summary>
      <param name="values">A dictionary containing the data frames
            that are to be written to the data stream.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(System.Collections.Generic.Dictionary{System.String,Numerics.NET.Matrix{``0}})">
      <summary>
            Writes matrices with the specified names to the data stream.
            </summary>
      <param name="values">A dictionary that maps names to
            matrices.</param>
      <typeparam name="T">The element type of the matrices.</typeparam>
      <returns>A dictionary containing the matrices
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(System.Collections.Generic.Dictionary{System.String,Numerics.NET.Vector{``0}})">
      <summary>
            Writes all vectors with the specified element type to the data stream.
            </summary>
      <typeparam name="T">The element type of the vectors.</typeparam>
      <returns>A dictionary containing the vectors
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write(System.Collections.Generic.IDictionary{System.String,`0})">
      <summary>
            Writes all objects to the data stream.
            </summary>
      <returns>A dictionary that maps names to objects.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``2(System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Writes the specified data frames to the data stream.
            </summary>
      <param name="values">A sequence of data frames.</param>
      <param name="names">A sequence of names corresponding to the data
            frames in <paramref name="values" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(System.Collections.Generic.IEnumerable{Numerics.NET.Matrix{``0}},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Writes matrices with the specified names to the data stream.
            </summary>
      <param name="names">A sequence of names of the matrices to write.</param>
      <param name="values">A sequence of matrices to write.</param>
      <typeparam name="T">The element type of the matrices.</typeparam>
      <returns>A dictionary containing the matrices
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.Write``1(System.Collections.Generic.IEnumerable{Numerics.NET.Vector{``0}},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Writes vectors with the specified names to the data stream.
            </summary>
      <param name="names">A sequence of names of the vectors.</param>
      <param name="values">A sequence of vectors to write.</param>
      <typeparam name="T">The element type of the vectors.</typeparam>
      <returns>A dictionary containing the vectors
            read from the data stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.WriteObject(`0)">
      <summary>
            Writes an object to the data stream.
            </summary>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.WriteSymbol(`0,System.String)">
      <summary>
            Writes the specified object to the data stream.
            </summary>
      <param name="value">The object to write to the data stream.</param>
      <param name="name">The name of the object in the data stream.</param>
    </member>
    <member name="M:Numerics.NET.Data.CompositeDataStream`1.WriteSymbolCore(`0,System.String)">
      <summary>
            Writes the specified object to the data stream.
            </summary>
      <param name="value">The object to write to the data stream.</param>
      <param name="name">The name of the object in the data stream.</param>
    </member>
    <member name="T:Numerics.NET.Data.DataObjectConverter`1">
      <summary>
            Serves as the abstract base class for objects that
            convert between data objects and vectors, matrices, 
            and data frames.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataObjectConverter`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Numerics.NET.Data.DataObjectConverter`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataObjectConverter`1.FromDataFrame``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Converts a data frame to a data object.
            </summary>
      <param name="dataFrame">The data frame to convert.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data object that represents <paramref name="dataFrame" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataObjectConverter`1.FromMatrix``1(Numerics.NET.Matrix{``0})">
      <summary>
            Converts a matrix to a data object.
            </summary>
      <param name="matrix">The matrix to convert.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A data object that represents <paramref name="matrix" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataObjectConverter`1.FromVector``1(Numerics.NET.Vector{``0})">
      <summary>
            Converts a vector to a data object.
            </summary>
      <param name="vector">The vector to convert.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A data object that represents <paramref name="vector" />.</returns>
    </member>
    <member name="T:Numerics.NET.Data.DataObjectKind">
      <summary>
            Enumerates the kinds of objects that may be
            stored in a file.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.Dictionary">
      <summary>
            A mapping from names to objects.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.Matrix">
      <summary>
            A two-dimensional array.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.Vector">
      <summary>
            A one-dimensional array.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.DataFrame">
      <summary>
            A data frame.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.List">
      <summary>
            A list of items that may be of different types.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.Scalar">
      <summary>
            A single value.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.DataObjectKind.Object">
      <summary>
            A single value of an object type.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.DataStream">
      <summary>
            Serves as the abstract base class for classes that 
            represent data files.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Numerics.NET.Data.DataStream</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Numerics.NET.Data.DataStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.DataStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.Dispose">
      <summary>
            Releases unmanaged resources.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.DataStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.OpenUri(System.String,System.String[])">
      <summary>
            Returns a stream suitable from reading from a resource specified
            by a URI.
            </summary>
      <param name="uri">A URI that can refer to a file on the local file system,
            or a location on the web.</param>
      <param name="extensions">A list of extensions to try if the specified path
            cannot be found.</param>
      <returns>A stream suitable for reading from the resource.</returns>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="uri" /> is a zero-length string, contains only white space, 
            or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="uri" /> is <see langword="null" />.</para>
      </exception>
      <exception cref="T:System.IO.PathTooLongException">
        <para>The specified path, file name, or both exceed the system-defined
            maximum length.For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</para>
      </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <para>The specified path is invalid, (for example, 
            it is on an unmapped drive).</para>
      </exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <para>
          <paramref name="uri" /> specified a directory.</para>
        <para>-or-</para>
        <para>The caller does not have the required permission.</para>
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <para>The file specified in path was not found.</para>
      </exception>
      <exception cref="T:System.NotSupportedException">
        <para>
          <paramref name="uri" /> is in an invalid format.</para>
      </exception>
      <exception cref="T:System.IO.IOException">
        <para>An I/O error occurred while opening the file.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadDataFrame">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadDataFrame``1(System.Int32,System.Boolean)">
      <summary>
            Reads a data frame from the file.
            </summary>
      <param name="keyColumn">The index of the column that serves
            as the index of the data frame.</param>
      <param name="dropIndexColumn">Optional. Specifies whether the column
            that contains the row keys should be dropped from the data frame.
            The default is <see langword="true" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <returns>A data frame containing the data in the file.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="keyColumn" /> is less than zero or greater than
            or equal to the number of columns in the data frame.</para>
      </exception>
      <exception cref="T:System.InvalidCastException">
        <para>The elements in the key column can not be converted
            to the key type <typeparamref name="R" />.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadDataFrame``2(System.Int32,System.Boolean)">
      <summary>
            Reads a data frame from the file.
            </summary>
      <param name="keyColumn">The index of the column that serves
            as the index of the data frame.</param>
      <param name="dropIndexColumn">Optional. Specifies whether the column
            that contains the row keys should be dropped from the data frame.
            The default is <see langword="true" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data in the file.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="keyColumn" /> is less than zero or greater than
            or equal to the number of columns in the data frame.</para>
      </exception>
      <exception cref="T:System.InvalidCastException">
        <para>The elements in the key column can not be converted
            to the key type <typeparamref name="R" />.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadDataFrame``1(System.String,System.Boolean)">
      <summary>
            Reads a data frame from the file.
            </summary>
      <param name="keyColumn">The name of the column that serves
            as the index of the data frame.</param>
      <param name="dropIndexColumn">Optional. Specifies whether the column
            that contains the row keys should be dropped from the data frame.
            The default is <see langword="true" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <returns>A data frame containing the data in the file.</returns>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> could not be found
            in the data frame.</para>
      </exception>
      <exception cref="T:System.InvalidCastException">
        <para>The elements in the key column can not be converted
            to the key type <typeparamref name="R" />.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadDataFrame``2(``1,System.Boolean)">
      <summary>
            Reads a data frame from the file.
            </summary>
      <param name="keyColumn">The key of the column that serves
            as the index of the data frame.</param>
      <param name="dropIndexColumn">Optional. Specifies whether the column
            that contains the row keys should be dropped from the data frame.
            The default is <see langword="true" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data in the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.DataStream.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.DataStream`1">
      <summary>
            Serves as the abstract base class for classes that 
            represent data files that contain objects of a certain type.
            </summary>
      <typeparam name="TObject">The type of the objects
            stored in the data stream.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Numerics.NET.Data.DataStream`1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Numerics.NET.Data.DataStream`1.Converter">
      <summary>
            Gets an object that converts between data objects and
            vectors, matrices, and data frames.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.ReadObject">
      <summary>
            Reads an object from the data stream.
            </summary>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.TryReadObject(`0@)">
      <summary>
            Attempts to read an object from the data stream.
            </summary>
      <param name="item">On return, the object that was read.</param>
      <returns>
        <see langword="true" /> if an item was read successfully;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.DataStream`1.WriteObject(`0)">
      <summary>
            Writes an object to the data stream.
            </summary>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="T:Numerics.NET.Data.IDataObject`1">
      <summary>
            Specifies the properties and methods of objects
            in a data file or stream.
            </summary>
      <typeparam name="TObject">The base type for the object.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.AsMatrix``1(System.Boolean)">
      <summary>
            Attempts to convert the object to a matrix with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix</typeparam>
      <returns>The new matrix if successful; otherwise <see langword="null" />.</returns>
      <remarks>
        <para>The conversion may fail for two reasons. Either the object
            is not a matrix or vector, or the element type of the matrix
            cannot be cast to <typeparamref name="T" />.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.AsVector``1(System.Boolean)">
      <summary>
            Attempts to convert the object to a vector with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector</typeparam>
      <returns>The new vector if successful; otherwise <see langword="null" />.</returns>
      <remarks>
        <para>The conversion may fail for two reasons. Either the object
            is not a vector, matrix, or one-column data frame, 
            or the element type of the vector cannot be cast 
            to <typeparamref name="T" />.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.Children">
      <summary>
            Enumerates the children of the object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.ElementType">
      <summary>
            Gets the element type of the object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.HasChildren">
      <summary>
            Gets whether the object has children.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.IsDataFrame">
      <summary>
            Gets whether the object can be converted to a vector.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.IsLoaded">
      <summary>
            Gets whether the data for the object has been loaded.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.IsMatrix">
      <summary>
            Gets whether the object can be converted to a matrix.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.IsVector">
      <summary>
            Gets whether the object can be converted to a data frame.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.Kind">
      <summary>
            Gets the kind of object.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.Load(System.Boolean)">
      <summary>
            Loads the object's data value.
            </summary>
      <param name="recursive">Specifies whether children of the
            object should be loaded as well.</param>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.ToDataFrame">
      <summary>
            Converts the object to a data frame.
            </summary>
      <returns>The new data frame.</returns>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.ToDataFrame``2">
      <summary>
            Converts the object to a data frame.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The new data frame.</returns>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.ToMatrix``1(System.Boolean)">
      <summary>
            Converts the object to a matrix with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix</typeparam>
      <returns>The new matrix.</returns>
    </member>
    <member name="M:Numerics.NET.Data.IDataObject`1.ToVector``1(System.Boolean)">
      <summary>
            Converts the object to a vector with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector</typeparam>
      <returns>The new vector.</returns>
    </member>
    <member name="P:Numerics.NET.Data.IDataObject`1.Value">
      <summary>
            Gets the object's data value.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.INamedDataFileObject`1">
      <summary>
            Specifies the properties and methods of objects
            in a data file.
            </summary>
      <typeparam name="TObject">The base type for the object.</typeparam>
    </member>
    <member name="P:Numerics.NET.Data.INamedDataFileObject`1.Name">
      <summary>
            Gets the name of the object.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.TextDataStream">
      <summary>
            Represents a data file in a text-based format.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.TextDataStream.#ctor">
      <summary>
            Constructs a new <see cref="T:Numerics.NET.Data.TextDataStream" /> object.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.TextDataStream.ReadComplexMatrix``1(System.Boolean)">
      <summary>
            Reads a complex matrix from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.TextDataStream.ReadComplexVector``1(System.Boolean)">
      <summary>
            Reads a complex vector from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.TextDataStream.Write``1(Numerics.NET.Matrix{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex matrix to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.TextDataStream.Write``1(Numerics.NET.Vector{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex vector to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.TextOptions">
      <summary>
            Represents the options available when reading and writing
            text files.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.TextOptions.#ctor(System.IFormatProvider,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Type)">
      <summary>Constructs a new set of options for delimited text files.</summary>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> that is used 
            in the conversion between text and other data types.</param>
      <param name="rowHeaders">Indicates that the first column contains row headers.</param>
      <param name="columnHeaders">Indicates that the first row contains column headers.</param>
      <param name="startRow">An integer specifying the 0-based row which contains the start of the data.</param>
      <param name="decimalType">The type to use for numbers containing decimals.</param>
      <param name="inferenceRows">The number of rows to use to infer the types
            of the columns.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startRow" /> is less than 1.
            </exception>
    </member>
    <member name="M:Numerics.NET.Data.TextOptions.#ctor(System.IFormatProvider,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Type,Numerics.NET.Data.AutoCategorization,System.Int32)">
      <summary>Constructs a new set of options for delimited text files.</summary>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> that is used 
            in the conversion between text and other data types.</param>
      <param name="rowHeaders">Indicates that the first column contains row headers.</param>
      <param name="columnHeaders">Indicates that the first row contains column headers.</param>
      <param name="startRow">An integer specifying the 0-based row which contains the start of the data.</param>
      <param name="decimalType">The type to use for numbers containing decimals.</param>
      <param name="inferenceRows">The number of rows to use to infer the types
            of the columns.</param>
      <param name="autoCategorize">Specifies which columns should be
            automatically converted to categorical columns.</param>
      <param name="maxCategories">The largest number of distinct
            levels for a column to be considered categorical.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startRow" /> is less than 1.
            </exception>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.AutoCategorize">
      <summary>
            Gets which columns in a data frame
            are automatically converted to categorical variables.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.ColumnHeaders">
      <summary>
            Gets whether the first row contains column headers.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.Culture">
      <summary>
            Gets the culture of the data file.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.DateTimeFormat">
      <summary>
            Gets an object that specifies how numeric values are parsed and formatted.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.DecimalType">
      <summary>
            Gets the type used to represent numbers with decimals.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.FormatProvider">
      <summary>
            Gets an object that provides information on how to parse strings
            and format values.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.TextOptions.GetExcludedColumns">
      <summary>
            Returns an array containing the indexes of the columns that are excluded from the matrix.
            </summary>
      <returns>An array of integers.</returns>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.InferenceRows">
      <summary>
            Gets the number of rows used to infer the type of columns.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.MaxCategories">
      <summary>
            Gets the largest number of distinct
            levels for a column to be considered categorical.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.NumberFormat">
      <summary>
            Gets an object that specifies how dates and times are parsed and formatted.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.RowHeaders">
      <summary>
            Gets whether the first column contains row headers.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.TextOptions.SetExcludedColumns(System.Int32[])">
      <summary>
            Sets the columns that are to be excluded from the matrix.
            </summary>
      <param name="columnIndexes">An array of zero or more integers containing the zero-based indexes
            of the rows that are to be excluded from the matrix.</param>
      <remarks>
        <para>Use this method to exclude columns that contain text or data that is not relevant.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.TextOptions.StartRow">
      <summary>
            Gets the 1-based index of the first row.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.TextOptionsExtensions">
      <summary>
            Contains extension methods for creating modified text options objects.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.TextOptionsExtensions.WithColumnHeaders``1(``0,System.Boolean)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.ColumnHeaders" />
            property changed to the specified value.
            </summary>
      <param name="options">The <see cref="T:Numerics.NET.Data.TextOptions" /> object to start from.</param>
      <param name="columnHeaders">The new value for 
            the <see cref="P:Numerics.NET.Data.TextOptions.ColumnHeaders" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.TextOptionsExtensions.WithDecimalType``1(``0,System.Type)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.DecimalType" />
            property changed to the specified value.
            </summary>
      <param name="options">The <see cref="T:Numerics.NET.Data.TextOptions" /> object to start from.</param>
      <param name="decimalType">The new value for 
            the <see cref="P:Numerics.NET.Data.TextOptions.DecimalType" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.TextOptionsExtensions.WithFormatProvider``1(``0,System.IFormatProvider)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.FormatProvider" />
            property changed to the specified value.
            </summary>
      <param name="options">The <see cref="T:Numerics.NET.Data.TextOptions" /> object to start from.</param>
      <param name="formatProvider">The new value for 
            the <see cref="P:Numerics.NET.Data.TextOptions.FormatProvider" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.TextOptionsExtensions.WithInferenceRows``1(``0,System.Int32)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.InferenceRows" />
            property changed to the specified value.
            </summary>
      <param name="options">The <see cref="T:Numerics.NET.Data.TextOptions" /> object to start from.</param>
      <param name="inferenceRows">The new value for 
            the <see cref="F:Numerics.NET.Data.TextOptions.inferenceRows" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.TextOptionsExtensions.WithRowHeaders``1(``0,System.Boolean)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.RowHeaders" />
            property changed to the specified value.
            </summary>
      <param name="options">The <see cref="T:Numerics.NET.Data.TextOptions" /> object to start from.</param>
      <param name="rowHeaders">The new value for 
            the <see cref="P:Numerics.NET.Data.TextOptions.RowHeaders" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.TextOptionsExtensions.WithStartRow``1(``0,System.Int32)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.StartRow" />
            property changed to the specified value.
            </summary>
      <param name="options">The <see cref="T:Numerics.NET.Data.TextOptions" /> object to start from.</param>
      <param name="startRow">The new value for 
            the <see cref="P:Numerics.NET.Data.TextOptions.StartRow" /> property.</param>
    </member>
    <member name="T:Numerics.NET.Data.Matlab.MatlabDataObject">
      <summary>
            Represents an element in a <c>.mat</c> file.
            </summary>
      <remarks></remarks>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.#ctor(System.String)">
      <summary>
            Constructs a new data element.
            </summary>
      <param name="name">The name of the element.</param>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.AsMatrix``1(System.Boolean)">
      <summary>
            Attempts to convert the object to a matrix with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix</typeparam>
      <returns>The new matrix if successful; otherwise <see langword="null" />.</returns>
      <remarks>
        <para>The conversion may fail for two reasons. Either the object
            is not a matrix or vector, or the element type of the matrix
            cannot be cast to <typeparamref name="T" />.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.AsVector``1(System.Boolean)">
      <summary>
            Attempts to convert the object to a vector with the specified element type.
            </summary>
      <typeparam name="T">The element type of the vector</typeparam>
      <returns>The new vector if successful; otherwise <see langword="null" />.</returns>
      <remarks>
        <para>The conversion may fail for two reasons. Either the object
            is not a vector, matrix, or one-column data frame, 
            or the element type of the vector cannot be cast 
            to <typeparamref name="T" />.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.ElementType">
      <summary>
            Gets the CLR type of the elements of the array.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.Fields">
      <summary>
            Gets a dictionary that maps field names to their values.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.GetValue">
      <summary>
            Gets the value of the object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.IsDataFrame">
      <summary>
            Gets whether the object can be converted to a vector.
            </summary>
      <value>Always returns <see langword="false" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.IsMatrix">
      <summary>
            Gets whether the object can be converted to a matrix.
            </summary>
      <value>Always returns <see langword="false" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.IsVector">
      <summary>
            Gets whether the object can be converted to a data frame.
            </summary>
      <value>Always returns <see langword="false" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.Kind">
      <summary>
            Gets the kind of data object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabDataObject.Name">
      <summary>
            Gets or sets the name of the element.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.ToDataFrame">
      <summary>
            Converts the object to a data frame.
            </summary>
      <returns>The new data frame.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.ToDataFrame``2">
      <summary>
            Converts the object to a data frame.
            </summary>
      <returns>The new data frame.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.ToMatrix``1(System.Boolean)">
      <summary>
            Converts the object to a matrix with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix</typeparam>
      <returns>The new matrix.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabDataObject.ToVector``1(System.Boolean)">
      <summary>
            Converts the object to a vector with the specified element type.
            </summary>
      <typeparam name="T">The element type of the vector</typeparam>
      <returns>The new vector.</returns>
    </member>
    <member name="T:Numerics.NET.Data.Matlab.MatlabFile">
      <summary>
            Contains <see langword="static" /> methods for reading from
            Matlab® data files.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.Open(System.IO.Stream)">
      <summary>
            Opens a Matlab® data file.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <returns>An <see cref="T:Numerics.NET.Data.Matlab.MatlabStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.Open(System.String)">
      <summary>
            Opens a Matlab®  data file.
            </summary>
      <param name="path">The path to the file.</param>
      <returns>An <see cref="T:Numerics.NET.Data.Matlab.MatlabStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadAllDataFrames(System.IO.Stream)">
      <summary>
            Reads all data frames from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>A dictionary containing all the data frames
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadAllDataFrames(System.String)">
      <summary>
            Reads all data frames from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <returns>A dictionary containing all the data frames
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadAllMatrices``1(System.IO.Stream,System.Boolean)">
      <summary>
            Reads all matrices from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing all the matrices
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadAllMatrices``1(System.String,System.Boolean)">
      <summary>
            Reads all matrices from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing all the matrices
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadAllVectors``1(System.IO.Stream,System.Boolean)">
      <summary>
            Reads all vectors from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing all the vectors
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadAllVectors``1(System.String,System.Boolean)">
      <summary>
            Reads all vectors from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing all the vectors
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadDataFrame(System.IO.Stream)">
      <summary>
            Reads a data frame from the specified Matlab® data file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>The data frame that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadDataFrame(System.IO.Stream,System.String)">
      <summary>
            Reads the data frame with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="name">The name of the data frame to read.</param>
      <returns>The data frame that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadDataFrame(System.String)">
      <summary>
            Reads a data frame from the specified Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <returns>The data frame that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadDataFrame(System.String,System.String)">
      <summary>
            Reads the data frame with the specified name from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the data frame to read.</param>
      <returns>The data frame that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadDataFrames(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified data frames from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the data frames to read.</param>
      <returns>A dictionary containing the data frames
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadDataFrames(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified data frames from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the data frames to read.</param>
      <returns>A dictionary containing the data frames
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadMatrices``1(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads the specified matrices from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the matrices to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing the matrices
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadMatrices``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads the specified matrices from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the matrices to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing the matrices
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadMatrix``1(System.IO.Stream,System.Boolean)">
      <summary>
            Reads a matrix from the specified Matlab® data file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadMatrix``1(System.IO.Stream,System.String,System.Boolean)">
      <summary>
            Reads the matrix with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="name">The name of the matrix to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadMatrix``1(System.String,System.Boolean)">
      <summary>
            Reads a matrix from the specified Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The matrix that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadMatrix``1(System.String,System.String,System.Boolean)">
      <summary>
            Reads the matrix with the specified name from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the matrix to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The matrix that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadVector``1(System.IO.Stream,System.Boolean)">
      <summary>
            Reads a vector from the specified Matlab® data file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadVector``1(System.IO.Stream,System.String,System.Boolean)">
      <summary>
            Reads the vector with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <param name="name">The name of the vector to read.</param>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadVector``1(System.String,System.Boolean)">
      <summary>
            Reads a vector from the specified Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The vector that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadVector``1(System.String,System.String,System.Boolean)">
      <summary>
            Reads the vector with the specified name from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the vector to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The vector that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadVectors``1(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads the specified vectors from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the vectors to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing the vectors
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabFile.ReadVectors``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads the specified vectors from a Matlab® data file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the vectors to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing the vectors
            read from the file using their name as the key.</returns>
    </member>
    <member name="T:Numerics.NET.Data.Matlab.MatlabStream">
      <summary>
            Represents a stream in Matlab® format.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabStream.CanAccessByName">
      <summary>
            Gets whether objects in the data file can be accessed by name.
            </summary>
      <value>Always returns <see langword="true" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabStream.Description">
      <summary>
            Gets a description for the file.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.Matlab.MatlabStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabStream.IsLittleEndian">
      <summary>
            Gets whether the file is in little-endian format,
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabStream.TryReadSymbolCore(System.Collections.Generic.KeyValuePair{System.String,Numerics.NET.Data.Matlab.MatlabDataObject}@)">
      <summary>
            Attempts to read a named object from the data stream.
            </summary>
      <param name="symbol">On return, a pair made up of 
            the name of the object that was read and its value.</param>
      <returns>A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 
            with the name of the object as the key and its value
            as the value.</returns>
    </member>
    <member name="P:Numerics.NET.Data.Matlab.MatlabStream.Version">
      <summary>
            Gets the version of the Matlab file.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Matlab.MatlabStream.WriteSymbolCore(Numerics.NET.Data.Matlab.MatlabDataObject,System.String)">
      <summary>
            Writes the specified object to the data stream.
            </summary>
      <param name="value">The object to write to the data stream.</param>
      <param name="name">The name of the object in the data stream.</param>
    </member>
    <member name="T:Numerics.NET.Data.R.RAttributeCollection">
      <summary>
            Represents a collection of attributes of R objects.
            </summary>
      <remarks>
        <para>Use the <see cref="T:Numerics.NET.Data.R.RAttributeCollection" /> class
            to access the attributes of an R object.
            The class is a dictionary that maps attribute names
            (strings) to attributes, which can be objects of any type.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Numerics.NET.Data.R.RObject}},System.Boolean)">
      <summary>
            Constructs a new attribute collection from a dictionary of items.
            </summary>
      <param name="items">A dictionary that maps attribute names
            <param name="readOnly">(Optional.) Specifies whether the collection should
            be read-only. The default is <see langword="true" />.</param>
            to attribute values.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.Add(System.String,Numerics.NET.Data.R.RObject)">
      <summary>
            Adds a new attribute to the collection.
            </summary>
      <param name="key">The name of the attribute.</param>
      <param name="value">The value of the attribute.</param>
      <exception cref="T:System.InvalidOperationException">
        <para>The collection is read-only.</para>
        <para>-or-</para>
        <para>An attribute with the specified key already exists in the collection.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="key" /> is <see langword="null" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="value" /> is <see langword="null" />.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.Clear">
      <summary>
            Removes all attributes from the collection.
            </summary>
      <exception cref="T:System.InvalidOperationException">
        <para>The collection is read-only.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.ContainsKey(System.String)">
      <summary>
            Returns whether the collection contains an attribute
            with the specified name.
            </summary>
      <param name="key">The name of the attribute.</param>
      <returns>
        <see langword="true" /> if the collection contains
            an attribute named <paramref name="key" />; otherwise
            <see langword="false" />.</returns>
    </member>
    <member name="P:Numerics.NET.Data.R.RAttributeCollection.Count">
      <summary>
            Gets the number of attributes in the collection.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RAttributeCollection.Empty">
      <summary>
            Represents an empty, read-only attribute collection.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates over the attributes in the collection.
            </summary>
      <returns>An enumerator for the collection.</returns>
    </member>
    <member name="P:Numerics.NET.Data.R.RAttributeCollection.IsReadOnly">
      <summary>
            Gets whether the collection is read-only.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RAttributeCollection.Item(System.String)">
      <summary>
            Gets or sets an attribute in the collection.
            </summary>
      <param name="key">The name of the attribute.</param>
      <returns>The value of the attribute with name <paramref name="key" />.</returns>
    </member>
    <member name="P:Numerics.NET.Data.R.RAttributeCollection.Keys">
      <summary>
            Gets a collection of the names of the attributes.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.Remove(System.String)">
      <summary>
            Removes the attribute with the specified name from the collection.
            </summary>
      <param name="key">The name of the attribute to remove.</param>
      <returns>
        <see langword="true" /> if the attribute was removed;
            otherwise <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <para>The collection is read-only.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.TryGetIntegers(System.String,Numerics.NET.Vector{System.Int32}@)">
      <summary>
            Attempts to get the value of an integer vector attribute.
            </summary>
      <param name="key">The name of the attribute to retrieve.</param>
      <param name="value">On return, the value of the attribute
            that was retrieved.</param>
      <returns>
        <see langword="true" /> if the attribute was found;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.TryGetString(System.String,System.String@)">
      <summary>
            Attempts to get the value of a string attribute.
            </summary>
      <param name="key">The name of the attribute to retrieve.</param>
      <param name="value">On return, the value of the attribute
            that was retrieved.</param>
      <returns>
        <see langword="true" /> if the attribute was found;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.TryGetStrings(System.String,Numerics.NET.Vector{System.String}@)">
      <summary>
            Attempts to get the value of a string vector attribute.
            </summary>
      <param name="key">The name of the attribute to retrieve.</param>
      <param name="value">On return, the value of the attribute
            that was retrieved.</param>
      <returns>
        <see langword="true" /> if the attribute was found;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RAttributeCollection.TryGetValue(System.String,Numerics.NET.Data.R.RObject@)">
      <summary>
            Attempts to retrieve the value of the attribute with the specified key
            from the collection.
            </summary>
      <param name="key">The name of the attribute to retrieve.</param>
      <param name="value">On return, the value of the attribute
            that was retrieved.</param>
      <returns>
        <see langword="true" /> if the attribute was found;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:Numerics.NET.Data.R.RAttributeCollection.Values">
      <summary>
            Gets a collection of the values of the attributes.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.R.RdataFile">
      <summary>
            Contains <see langword="static" /> methods for
            reading from R's .rdata and .rds files.
            </summary>
      <remarks>
        <para>Use the <see cref="T:Numerics.NET.Data.R.RdataFile" /> class to load or save data frames,
            vectors, or matrices in files stored in R's RDA or RDATA format.
            </para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Append(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>
            Creates a new R data file in .rda format for writing.
            </summary>
      <param name="stream">The stream the objects should be written to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdataStream" /> that can be written to.</returns>
      <remarks>
        <para>If the file exists, it is overwritten.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Create(System.String,System.Boolean,System.Boolean)">
      <summary>
            Creates a new R data file in .rda format for writing.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdataStream" /> that can be written to.</returns>
      <remarks>
        <para>If the file exists, it is overwritten.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Open(System.IO.Stream)">
      <summary>
            Opens an R data file in .rda format.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdataStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Open(System.String)">
      <summary>
            Opens an R data file in .rda format.
            </summary>
      <param name="path">The path to the file.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdataStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAll(System.String)">
      <summary>
            Reads all objects from the data stream.
            </summary>
      <param name="path">The file to read from.</param>
      <returns>A dictionary that maps names to objects.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllDataFrames(System.IO.Stream)">
      <summary>
            Reads all data frames from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>A dictionary containing all the data frames
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllDataFrames``2(System.IO.Stream)">
      <summary>
            Reads all data frames from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>A dictionary containing all the data frames
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllDataFrames(System.String)">
      <summary>
            Reads all data frames from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <returns>A dictionary containing all the data frames
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllDataFrames``2(System.String)">
      <summary>
            Reads all data frames from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <returns>A dictionary containing all the data frames
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllMatrices``1(System.IO.Stream)">
      <summary>
            Reads all matrices from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>A dictionary containing all the matrices
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllMatrices``1(System.String,System.Boolean)">
      <summary>
            Reads all matrices from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing all the matrices
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllVectors``1(System.IO.Stream)">
      <summary>
            Reads all vectors from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>A dictionary containing all the vectors
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadAllVectors``1(System.String,System.Boolean)">
      <summary>
            Reads all vectors from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing all the vectors
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame(System.IO.Stream)">
      <summary>
            Reads a data frame from the specified file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>The data frame that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame``2(System.IO.Stream)">
      <summary>
            Reads a data frame from the specified file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame(System.IO.Stream,System.String)">
      <summary>
            Reads the data frame with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="name">The name of the data frame to read.</param>
      <returns>The data frame that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame``2(System.IO.Stream,System.String)">
      <summary>
            Reads the data frame with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="name">The name of the data frame to read.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame(System.String)">
      <summary>
            Reads a data frame from the specified file.
            </summary>
      <param name="path">The file to read from.</param>
      <returns>The data frame that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame``2(System.String)">
      <summary>
            Reads a data frame from the specified file.
            </summary>
      <param name="path">The file to read from.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame(System.String,System.String)">
      <summary>
            Reads the data frame with the specified name from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the data frame to read.</param>
      <returns>The data frame that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrame``2(System.String,System.String)">
      <summary>
            Reads the data frame with the specified name from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the data frame to read.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrames(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified data frames from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the data frames to read.</param>
      <returns>A dictionary containing the data frames
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrames``2(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified data frames from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the data frames to read.</param>
      <returns>A dictionary containing the data frames
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrames(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified data frames from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the data frames to read.</param>
      <returns>A dictionary containing the data frames
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadDataFrames``2(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified data frames from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the data frames to read.</param>
      <returns>A dictionary containing the data frames
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadMatrices``1(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified matrices from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the matrices to read.</param>
      <returns>A dictionary containing the matrices
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadMatrices``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads the specified matrices from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the matrices to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing the matrices
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadMatrix``1(System.IO.Stream)">
      <summary>
            Reads a matrix from the specified file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadMatrix``1(System.IO.Stream,System.String)">
      <summary>
            Reads the matrix with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="name">The name of the matrix to read.</param>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadMatrix``1(System.String,System.Boolean)">
      <summary>
            Reads a matrix from the specified file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The matrix that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadMatrix``1(System.String,System.String,System.Boolean)">
      <summary>
            Reads the matrix with the specified name from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the matrix to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The matrix that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadVector``1(System.IO.Stream)">
      <summary>
            Reads a vector from the specified file.
            </summary>
      <param name="stream">The stream to read from.</param>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadVector``1(System.IO.Stream,System.String)">
      <summary>
            Reads the vector with the specified name from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="name">The name of the vector to read.</param>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadVector``1(System.String,System.Boolean)">
      <summary>
            Reads a vector from the specified file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The vector that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadVector``1(System.String,System.String,System.Boolean)">
      <summary>
            Reads the vector with the specified name from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="name">The name of the vector to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>The vector that was read from the file.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadVectors``1(System.IO.Stream,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Reads the specified vectors from a stream.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="names">A sequence of names of the vectors to read.</param>
      <returns>A dictionary containing the vectors
            read from the stream using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.ReadVectors``1(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>
            Reads the specified vectors from a file.
            </summary>
      <param name="path">The file to read from.</param>
      <param name="names">A sequence of names of the vectors to read.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <returns>A dictionary containing the vectors
            read from the file using their name as the key.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.IO.Stream,Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a data frame to the specified file.
            </summary>
      <param name="dataFrame">The data frame to write.</param>
      <param name="stream">The stream to write the data frame to.</param>
      <param name="name">A name for the data frame. The default is <c>df</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.IO.Stream,Numerics.NET.DataAnalysis.DataFrame{``0,``1},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a data frame to the specified file.
            </summary>
      <param name="dataFrame">The data frame to write.</param>
      <param name="stream">The stream to write the data frame to.</param>
      <param name="name">A name for the data frame. The default is <c>df</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,Numerics.NET.Matrix{``0},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a matrix to the specified file.
            </summary>
      <param name="matrix">The matrix to write.</param>
      <param name="stream">The stream to write the matrix to.</param>
      <param name="name">A name for the matrix. The default is <c>matrix</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,Numerics.NET.Vector{``0},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a vector to the specified file.
            </summary>
      <param name="vector">The vector to write.</param>
      <param name="stream">The stream to write the vector to.</param>
      <param name="name">A name for the vector. The default is <c>vector</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.IO.Stream,System.Collections.Generic.IDictionary{System.String,Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String}},System.Boolean,System.Boolean)">
      <summary>
            Writes the data frames in a collection to the specified file.
            </summary>
      <param name="dataFrames">A dictionary that maps names to the data frames
            to write.</param>
      <param name="stream">The stream to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.IO.Stream,System.Collections.Generic.IDictionary{System.String,Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Boolean,System.Boolean)">
      <summary>
            Writes the data frames in a collection to the specified file.
            </summary>
      <param name="dataFrames">A dictionary that maps names to the data frames
            to write.</param>
      <param name="stream">The stream to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frames.</typeparam>
      <typeparam name="C">The type of the column keys of the data frames.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,System.Collections.Generic.IDictionary{System.String,Numerics.NET.Matrix{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes the matrices in a collection to the specified file.
            </summary>
      <param name="matrices">A dictionary that maps names to the matrices
            to write.</param>
      <param name="stream">The stream to write the matrices to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrices.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,System.Collections.Generic.IDictionary{System.String,Numerics.NET.Vector{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes the vectors in a collection to the specified file.
            </summary>
      <param name="vectors">A dictionary that maps names to the vectors
            to write.</param>
      <param name="stream">The stream to write the vectors to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vectors.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="stream">The stream to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="names">A sequence of corresponding names 
            for the data frames.</param>
      <param name="stream">The stream to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="stream">The stream to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frames.</typeparam>
      <typeparam name="C">The type of the column keys of the data frames.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="names">A sequence of corresponding names 
            for the data frames.</param>
      <param name="stream">The stream to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frames.</typeparam>
      <typeparam name="C">The type of the column keys of the data frames.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.Matrix{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of matrices to the specified file.
            </summary>
      <param name="matrices">A sequence of matrices to write.</param>
      <param name="stream">The stream to write the matrices to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrices.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.Matrix{``0}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of matrices to the specified file.
            </summary>
      <param name="matrices">A sequence of matrices to write.</param>
      <param name="names">A sequence of corresponding names 
            for the matrices.</param>
      <param name="stream">The stream to write the matrices to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrices.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.Vector{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of vectors to the specified file.
            </summary>
      <param name="vectors">A sequence of vectors to write.</param>
      <param name="stream">The stream to write the vectors to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vectors.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.IO.Stream,System.Collections.Generic.IEnumerable{Numerics.NET.Vector{``0}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of vectors to the specified file.
            </summary>
      <param name="vectors">A sequence of vectors to write.</param>
      <param name="names">A sequence of corresponding names 
            for the vectors.</param>
      <param name="stream">The stream to write the vectors to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vectors.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.String,Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a data frame to the specified file.
            </summary>
      <param name="dataFrame">The data frame to write.</param>
      <param name="path">The file to write the data frame to.</param>
      <param name="name">A name for the data frame. The default is <c>df</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.String,Numerics.NET.DataAnalysis.DataFrame{``0,``1},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a data frame to the specified file.
            </summary>
      <param name="dataFrame">The data frame to write.</param>
      <param name="path">The file to write the data frame to.</param>
      <param name="name">A name for the data frame. The default is <c>df</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,Numerics.NET.Matrix{``0},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a matrix to the specified file.
            </summary>
      <param name="matrix">The matrix to write.</param>
      <param name="path">The file to write the matrix to.</param>
      <param name="name">A name for the matrix. The default is <c>matrix</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,Numerics.NET.Vector{``0},System.String,System.Boolean,System.Boolean)">
      <summary>
            Writes a vector to the specified file.
            </summary>
      <param name="vector">The vector to write.</param>
      <param name="path">The file to write the vector to.</param>
      <param name="name">A name for the vector. The default is <c>vector</c>.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.String,System.Collections.Generic.IDictionary{System.String,Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String}},System.Boolean,System.Boolean)">
      <summary>
            Writes the data frames in a collection to the specified file.
            </summary>
      <param name="dataFrames">A dictionary that maps names to the data frames
            to write.</param>
      <param name="path">The file to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.String,System.Collections.Generic.IDictionary{System.String,Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Boolean,System.Boolean)">
      <summary>
            Writes the data frames in a collection to the specified file.
            </summary>
      <param name="dataFrames">A dictionary that maps names to the data frames
            to write.</param>
      <param name="path">The file to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frames.</typeparam>
      <typeparam name="C">The type of the column keys of the data frames.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,System.Collections.Generic.IDictionary{System.String,Numerics.NET.Matrix{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes the matrices in a collection to the specified file.
            </summary>
      <param name="matrices">A dictionary that maps names to the matrices
            to write.</param>
      <param name="path">The file to write the matrices to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrices.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,System.Collections.Generic.IDictionary{System.String,Numerics.NET.Vector{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes the vectors in a collection to the specified file.
            </summary>
      <param name="vectors">A dictionary that maps names to the vectors
            to write.</param>
      <param name="path">The file to write the vectors to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vectors.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="path">The file to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="names">A sequence of corresponding names 
            for the data frames.</param>
      <param name="path">The file to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="path">The file to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frames.</typeparam>
      <typeparam name="C">The type of the column keys of the data frames.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``2(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.DataAnalysis.DataFrame{``0,``1}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of data frames to the specified file.
            </summary>
      <param name="dataFrames">A sequence of data frames to write.</param>
      <param name="names">A sequence of corresponding names 
            for the data frames.</param>
      <param name="path">The file to write the data frames to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="R">The type of the row keys of the data frames.</typeparam>
      <typeparam name="C">The type of the column keys of the data frames.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.Matrix{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of matrices to the specified file.
            </summary>
      <param name="matrices">A sequence of matrices to write.</param>
      <param name="path">The file to write the matrices to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrices.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.Matrix{``0}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of matrices to the specified file.
            </summary>
      <param name="matrices">A sequence of matrices to write.</param>
      <param name="names">A sequence of corresponding names 
            for the matrices.</param>
      <param name="path">The file to write the matrices to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the matrices.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.Vector{``0}},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of vectors to the specified file.
            </summary>
      <param name="vectors">A sequence of vectors to write.</param>
      <param name="path">The file to write the vectors to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vectors.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataFile.Write``1(System.String,System.Collections.Generic.IEnumerable{Numerics.NET.Vector{``0}},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
      <summary>
            Writes a sequence of vectors to the specified file.
            </summary>
      <param name="vectors">A sequence of vectors to write.</param>
      <param name="names">A sequence of corresponding names 
            for the vectors.</param>
      <param name="path">The file to write the vectors to.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <typeparam name="T">The type of the elements of the vectors.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.R.RdataFormat">
      <summary>
            Enumerates the possible formats of an .rdata file.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RdataFormat.Xdr">
      <summary>
            The file is stored in XDR format. This is the default.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RdataFormat.Ascii">
      <summary>
            The file is stored in ASCII format.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RdataFormat.Binary">
      <summary>
            The file is stored in native binary format.
            This is currently not supported.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.R.RdataStream">
      <summary>
            Represents a file in R's .rdata format.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.AddBzip2CompressionMode(System.Func{System.IO.Stream,System.IO.Stream},System.Func{System.IO.Stream,System.IO.Stream})">
      <summary>
            Adds support for reading and writing R files using bzip2 compression.
            </summary>
      <param name="compressStream">A delegate that creates a compressed
            stream from a stream for writing.</param>
      <param name="decompressStream">A delegate that creates a compressed
            stream from a stream for reading.</param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.AddCompressionMode(System.String,System.Byte[],System.Func{System.IO.Stream,System.IO.Stream},System.Func{System.IO.Stream,System.IO.Stream})">
      <summary>
            Adds a compression mode for reading and writing R files.
            </summary>
      <param name="name">The name of the compression mode.</param>
      <param name="magicBytes">The 'magic bytes' that identify the compression mode.</param>
      <param name="compressStream">A delegate that creates a compressed
            stream from a stream for writing.</param>
      <param name="decompressStream">A delegate that creates a compressed
            stream from a stream for reading.</param>
      <remarks>
            The only format supported out of the box 
            is gzip compression. It does not need to be added explicitly.
            </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.AddXZCompressionMode(System.Func{System.IO.Stream,System.IO.Stream},System.Func{System.IO.Stream,System.IO.Stream})">
      <summary>
            Adds support for reading and writing R files using XZ compression.
            </summary>
      <param name="compressStream">A delegate that creates a compressed
            stream from a stream for writing.</param>
      <param name="decompressStream">A delegate that creates a compressed
            stream from a stream for reading.</param>
    </member>
    <member name="P:Numerics.NET.Data.R.RdataStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RdataStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RdataStream.Converter">
      <summary>
            Gets an object that converts between data objects and
            vectors, matrices, and data frames.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.R.RdataStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.TryGetCompressedStream(System.IO.Stream,System.IO.Stream@)">
      <summary>
            Attempts to detect a compressed stream.
            </summary>
      <param name="stream">The stream that contains the data.</param>
      <param name="compressedStream">On successful return,
            the compressed stream.</param>
      <returns>
        <see langword="true" /> if a compressed stream
            was detected; otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.TryReadSymbolCore(System.Collections.Generic.KeyValuePair{System.String,Numerics.NET.Data.R.RObject}@)">
      <summary>
            Attempts to read a named object from the data stream.
            </summary>
      <param name="symbol">On return, a pair made up of 
            the name of the object that was read and its value.</param>
      <returns>A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 
            with the name of the object as the key and its value
            as the value.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdataStream.WriteSymbolCore(Numerics.NET.Data.R.RObject,System.String)">
      <summary>
            Writes the specified object to the data stream.
            </summary>
      <param name="value">The object to write to the data stream.</param>
      <param name="name">The name of the object in the data stream.</param>
    </member>
    <member name="T:Numerics.NET.Data.R.RdsFile">
      <summary>
            Contains <see langword="static" /> methods for
            reading from, writing to, or opening R's .rds files.
            </summary>
      <remarks>
        <para>Use the <see cref="T:Numerics.NET.Data.R.RdsFile" /> class to load or save a single
            data frame, matrix, or vector from a file in R's RDS format.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.Create(System.String,System.Boolean,System.Boolean)">
      <summary>
            Creates a new R data file in .rds format for writing.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="compress">Optional. Specifies whether the data 
            should be compressed. The default is <see langword="true" />.</param>
      <param name="ascii">Optional. Specifies whether the data should
            be written in human-readable ASCII format. The default is 
            <see langword="false" />.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdsStream" /> that can be written to.</returns>
      <remarks>
        <para>If the file exists, it is overwritten.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.Open(System.IO.Stream)">
      <summary>
            Opens an R data file in .rds format.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdataStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.Open(System.String)">
      <summary>
            Opens an R data file in .rds format.
            </summary>
      <param name="path">The path to the file.</param>
      <returns>An <see cref="T:Numerics.NET.Data.R.RdsStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.ReadDataFrame(System.IO.Stream)">
      <summary>
            Reads a data frame from a stream in R's RDS format.
            </summary>
      <param name="stream">A stream.</param>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.ReadDataFrame(System.String)">
      <summary>
            Reads a data frame from an R file in RDS format.
            </summary>
      <param name="path">The path to the file.</param>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.ReadMatrix``1(System.IO.Stream,System.Boolean)">
      <summary>
            Reads a matrix from a stream in R's RDS format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.ReadMatrix``1(System.String,System.Boolean)">
      <summary>
            Reads a matrix from an R file in RDS format.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <param name="path">The path to the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.ReadVector``1(System.IO.Stream,System.Boolean)">
      <summary>
            Reads a vector from a stream in R's RDS format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.ReadVector``1(System.String,System.Boolean)">
      <summary>
            Reads a vector from an R file in RDS format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />, the default), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.WriteDataFrame(Numerics.NET.DataAnalysis.DataFrame{System.Int64,System.String},System.String,System.Boolean,System.Boolean)">
      <summary>
            Saves a data frame to an R data file.
            </summary>
      <param name="dataFrame">The data frame to serialize.</param>
      <param name="path">The path to the file to save to.</param>
      <param name="compress">(Optional.) Specifies whether the
            output should be compressed using gzip compression.
            The default is <see langword="true" />.
            </param>
      <param name="ascii">(Optional.) Specifies whether the
            output should be written in ASCII format as opposed to
            binary. The default is <see langword="false" />.
            </param>
      <returns></returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.WriteMatrix``1(Numerics.NET.Matrix{``0},System.String,System.Boolean,System.Boolean)">
      <summary>
            Saves a matrix to an R data file.
            </summary>
      <param name="matrix">The matrix to serialize.</param>
      <param name="path">The path to the file to save to.</param>
      <param name="compress">(Optional.) Specifies whether the
            output should be compressed using gzip compression.
            The default is <see langword="true" />.
            </param>
      <param name="ascii">(Optional.) Specifies whether the
            output should be written in ASCII format as opposed to
            binary. The default is <see langword="false" />.
            </param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsFile.WriteVector``1(Numerics.NET.Vector{``0},System.String,System.Boolean,System.Boolean)">
      <summary>
            Saves a vector to an R data file.
            </summary>
      <param name="vector">The vector to serialize.</param>
      <param name="path">The path to the file to save to.</param>
      <param name="compress">(Optional.) Specifies whether the
            output should be compressed using gzip compression.
            The default is <see langword="true" />.
            </param>
      <param name="ascii">(Optional.) Specifies whether the
            output should be written in ASCII format as opposed to
            binary. The default is <see langword="false" />.
            </param>
    </member>
    <member name="T:Numerics.NET.Data.R.RdsStream">
      <summary>
            Represents a file in R's .rds format.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RdsStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RdsStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RdsStream.Converter">
      <summary>
            Gets an object that converts between data objects and
            vectors, matrices, and data frames.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.R.RdsStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsStream.TryReadObject(Numerics.NET.Data.R.RObject@)">
      <summary>
            Attempts to read an object from the data stream.
            </summary>
      <param name="item">On return, the object that was read.</param>
      <returns>
        <see langword="true" /> if an item was read successfully;
            otherwise <see langword="false" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RdsStream.WriteObject(Numerics.NET.Data.R.RObject)">
      <summary>
            Writes an object to the data stream.
            </summary>
      <returns>The object that was read from the data stream.</returns>
    </member>
    <member name="T:Numerics.NET.Data.R.RFileFormat">
      <summary>
            Enumerates the possible formats of an R file.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RFileFormat.Rda">
      <summary>
            The file is in .rdata format, 
            containing zero or more named objects. 
            This is the default.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RFileFormat.Rdata">
      <summary>
            Same as <c>Rda</c>.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RFileFormat.Rds">
      <summary>
            The file is in .rds format, 
            containing one unnamed object.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.R.RObject">
      <summary>
            Represents on object that was read from or can be written to
            an R data file.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.#ctor">
      <summary>
            Constructs a new R object.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.AsMatrix``1(System.Boolean)">
      <summary>
            Attempts to convert the object to a matrix with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix</typeparam>
      <returns>The new matrix if successful; otherwise <see langword="null" />.</returns>
      <remarks>
        <para>The conversion may fail for two reasons. Either the object
            is not a matrix or vector, or the element type of the matrix
            cannot be cast to <typeparamref name="T" />.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.AsVector``1(System.Boolean)">
      <summary>
            Attempts to convert the object to a vector with the specified element type.
            </summary>
      <typeparam name="T">The element type of the vector</typeparam>
      <returns>The new vector if successful; otherwise <see langword="null" />.</returns>
      <remarks>
        <para>The conversion may fail for two reasons. Either the object
            is not a vector, matrix, or one-column data frame, 
            or the element type of the vector cannot be cast 
            to <typeparamref name="T" />.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.Attributes">
      <summary>
            Gets the collection of attributes associated with the object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.Children">
      <summary>
            Gets the sequence of children of the object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.Class">
      <summary>
            Gets the class of the object.
            </summary>
      <remarks>
        <para>If the object does not have a class, then an empty string
            is returned.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.Classes">
      <summary>
            Gets the class of the object.
            </summary>
      <remarks>
        <para>If the object does not have a class, then an empty string
            is returned.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.ElementType">
      <summary>
            Gets the element type of the object.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.GetValue">
      <summary>
            Gets the value of the object.
            </summary>
      <returns></returns>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.HasAttributes">
      <summary>
            Gets whether the object has attributes associated with it.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.HasChildren">
      <summary>
            Gets whether the object has child objects.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.HasClass(System.String)">
      <summary>
            Returns whether the object is of the specified class.
            </summary>
      <param name="name">The name of the class.</param>
      <returns>
        <see langword="true" /> if the object is
            of class <paramref name="name" />; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.HasTag">
      <summary>
            Gets whether the object has a tag associated with it.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.IsDataFrame">
      <summary>
            Gets whether the object can be converted to a vector.
            </summary>
      <value>Always returns <see langword="false" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.IsMatrix">
      <summary>
            Gets whether the object can be converted to a matrix.
            </summary>
      <value>Always returns <see langword="false" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.IsObject">
      <summary>
            Gets whether the object is an R object (with a class attribute).
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.IsVector">
      <summary>
            Gets whether the object can be converted to a data frame.
            </summary>
      <value>Always returns <see langword="false" />.</value>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.Kind">
      <summary>
            Gets the kind of object.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RObject.Null">
      <summary>
            Represents an R object without a value.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.RType">
      <summary>
            Gets the R type of the object.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.R.RObject.Tag">
      <summary>
            Gets the tag associated with the objet.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.ToDataFrame">
      <summary>
            Converts the object to a data frame.
            </summary>
      <returns>The new data frame.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.ToDataFrame``2">
      <summary>
            Converts the object to a data frame.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The new data frame.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.ToMatrix``1(System.Boolean)">
      <summary>
            Converts the object to a matrix with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix</typeparam>
      <returns>The new matrix.</returns>
    </member>
    <member name="M:Numerics.NET.Data.R.RObject.ToVector``1(System.Boolean)">
      <summary>
            Converts the object to a vector with the specified element type.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector</typeparam>
      <returns>The new vector.</returns>
    </member>
    <member name="T:Numerics.NET.Data.R.RType">
      <summary>
            Enumerates the types of R objects that may be stored in a file.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.NilValue">
      <summary>
            A null value.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Symbol">
      <summary>
            An item in a pair list.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.PairList">
      <summary>
            A collection of named objects.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Char">
      <summary>
            A function closure.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Logical">
      <summary>
            A vector of logical (boolean) values.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Integer">
      <summary>
            A vector of integers.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Real">
      <summary>
            A vector of real numbers.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Complex">
      <summary>
            A vector of complex numbers.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.String">
      <summary>
            A vector of strings.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.List">
      <summary>
            A collection of unnamed objects.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.S4Object">
      <summary>
            An R 'object.' Currently not supported.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.EndOfList">
      <summary>
            An end-of-list marker.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.R.RType.Reference">
      <summary>
            An internal reference to another object.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.Stata.StataFile">
      <summary>
            Contains <see langword="static" /> methods for
            reading from and writing to 
            <application>stata®</application> .dta files.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataFile.Open(System.IO.Stream)">
      <summary>
            Opens a stata® data file.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Stata.StataStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataFile.Open(System.String)">
      <summary>
            Opens a stata data file.
            </summary>
      <param name="path">The path to the file.</param>
      <returns>An <see cref="T:Numerics.NET.Data.Stata.StataStream" /> that can be read from.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataFile.ReadDataFrame(System.IO.Stream)">
      <summary>
            Reads a data frame from a stream in stata® format.
            </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> the data is to be read from.</param>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataFile.ReadDataFrame(System.String)">
      <summary>
            Reads a data frame from a <application>Stata</application> 
            file.
            </summary>
      <param name="path">The path to the data file.</param>
      <returns>A data frame containing the data in the file
            specified by <paramref name="path" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">The file specified by <paramref name="path" /> does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataFile.ReadDataFrame``2(System.String)">
      <summary>
            Reads a data frame from a <application>Stata</application> 
            file.
            </summary>
      <param name="path">The path to the data file.</param>
      <returns>A data frame containing the data in the file
            specified by <paramref name="path" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">The file specified by <paramref name="path" /> does not exist.</exception>
    </member>
    <member name="T:Numerics.NET.Data.Stata.StataStream">
      <summary>
            Reads data frames from a data stream in stata® format.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Stata.StataStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Stata.StataStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.Stata.StataStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Stata.StataStream.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.Text.DelimitedTextFile">
      <summary>
            Provides static methods for reading and writing
            files in delimited text format.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Numerics.NET.Data.Text.DelimitedTextFile</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Append(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Opens a data stream in delimited-text format for writing.
            </summary>
      <param name="stream">The stream to write to.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when writing the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.DelimitedTextStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Append(System.IO.Stream,System.Globalization.CultureInfo)">
      <summary>
            Opens a data stream in delimited-text format for writing.
            </summary>
      <param name="stream">The stream to write to.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> value
            that specifies the culture to use when formatting values.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.DelimitedTextStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Create(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Creates a data file in delimited text format for writing.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when writing the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.DelimitedTextStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Create(System.String,System.Globalization.CultureInfo)">
      <summary>
            Creates a data file in CSV format for writing.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> value
            that specifies the culture to use when formatting values.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.DelimitedTextStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Open(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Opens a data stream in delimited text format for reading.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.DelimitedTextStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Open(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Opens a data file in delimited text format for reading.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.DelimitedTextStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadComplexMatrix``1(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a complex matrix from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadComplexMatrix``1(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a complex matrix from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadComplexVector``1(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a complex vector from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadComplexVector``1(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a complex vector from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadDataFrame(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a data frame from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadDataFrame``2(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a data frame from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadDataFrame``1(System.IO.Stream,System.String,System.Boolean,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a data frame from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <param name="keyColumn">The name of the column that contains the column keys.</param>
      <param name="dropKeyColumn">If <see langword="true" />, the key column
            is not included in the returned data frame.</param>
      <typeparam name="R">The element type of the key column.</typeparam>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> was not found in the file.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadDataFrame(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a data frame from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadDataFrame``2(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a data frame from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadDataFrame``1(System.String,System.String,System.Boolean,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a data frame from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <param name="keyColumn">The name of the column that contains the column keys.</param>
      <param name="dropKeyColumn">If <see langword="true" />, the key column
            is not included in the returned data frame.</param>
      <typeparam name="R">The element type of the key column.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> was not found in the file.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadMatrix``1(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a matrix from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadMatrix``1(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a matrix from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadVector``1(System.IO.Stream,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a vector from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.ReadVector``1(System.String,Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Reads a vector from a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``2(System.IO.Stream,Numerics.NET.DataAnalysis.DataFrame{``0,``1},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a data frame to a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="dataFrame">The data frame to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.IO.Stream,Numerics.NET.Matrix{Numerics.NET.Complex{``0}},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a complex matrix to a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="matrix">The matrix to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.IO.Stream,Numerics.NET.Matrix{``0},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a matrix to a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="matrix">The matrix to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.IO.Stream,Numerics.NET.Vector{Numerics.NET.Complex{``0}},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a complex vector to a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="vector">The vector to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.IO.Stream,Numerics.NET.Vector{``0},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a vector to a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="vector">The vector to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``2(System.String,Numerics.NET.DataAnalysis.DataFrame{``0,``1},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a data frame to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="dataFrame">The data frame to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.String,Numerics.NET.Matrix{Numerics.NET.Complex{``0}},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a complex matrix to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="matrix">The matrix to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.String,Numerics.NET.Matrix{``0},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a matrix to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="matrix">The matrix to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.String,Numerics.NET.Vector{Numerics.NET.Complex{``0}},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a complex vector to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="vector">The vector to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextFile.Write``1(System.String,Numerics.NET.Vector{``0},Numerics.NET.Data.Text.DelimitedTextOptions)">
      <summary>
            Writes a vector to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="vector">The vector to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.DelimitedTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="T:Numerics.NET.Data.Text.DelimitedTextOptions">
      <summary>
            Represents the options available when reading and writing
            delimited text files.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.#ctor(System.IFormatProvider,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Type,System.Char,System.String,Numerics.NET.Data.Text.QuoteUsage,System.Char,Numerics.NET.Data.Text.QuoteEscapeMethod,System.Char,System.Boolean)">
      <summary>Constructs a new set of options for delimited text files.</summary>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> that is used 
            in the conversion between text and other data types.</param>
      <param name="columnHeaders">Indicates that the first row contains column headers.</param>
      <param name="rowHeaders">Indicates that the first column contains row headers.</param>
      <param name="startRow">An integer specifying the 1-based row which contains the start of the data.</param>
      <param name="inferenceRows">The number of rows to use to infer the types
            of the columns.</param>
      <param name="decimalType">The type to use for numbers containing decimals.</param>
      <param name="columnDelimiter">The character used to separate columns.</param>
      <param name="mergeConsecutiveDelimiters">Indicates whether consecutive column delimiters
            are to be treated as a single delimiter.</param>
      <param name="endOfLine">The string used to terminate a row.</param>
      <param name="quote">A <see cref="T:Numerics.NET.Data.Text.QuoteUsage" /> value that specifies
            when fields should be quoted. The default is <c>AsNeededForColumnType</c>.</param>
      <param name="quoteCharacter">The character used to quote fields.</param>
      <param name="quoteEscapeMethod">Specifies whether the quote character
            should be repeated twice when it appears in quoted text.</param>
      <param name="escapeCharacter">The character to use to escape quote characters.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startRow" /> is less than 1.
            </exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.#ctor(System.IFormatProvider,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Type,System.Char,System.String,Numerics.NET.Data.Text.QuoteUsage,System.Char,Numerics.NET.Data.Text.QuoteEscapeMethod,System.Char,System.Boolean,Numerics.NET.Data.AutoCategorization,System.Int32)">
      <summary>Constructs a new set of options for delimited text files.</summary>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> that is used 
            in the conversion between text and other data types.</param>
      <param name="columnHeaders">Indicates that the first row contains column headers.</param>
      <param name="rowHeaders">Indicates that the first column contains row headers.</param>
      <param name="startRow">An integer specifying the 1-based row which contains the start of the data.</param>
      <param name="inferenceRows">The number of rows to use to infer the types
            of the columns.</param>
      <param name="decimalType">The type to use for numbers containing decimals.</param>
      <param name="columnDelimiter">The character used to separate columns.</param>
      <param name="mergeConsecutiveDelimiters">Indicates whether consecutive column delimiters
            are to be treated as a single delimiter.</param>
      <param name="endOfLine">The string used to terminate a row.</param>
      <param name="quote">A <see cref="T:Numerics.NET.Data.Text.QuoteUsage" /> value that specifies
            when fields should be quoted. The default is <c>AsNeededForColumnType</c>.</param>
      <param name="quoteCharacter">The character used to quote fields.</param>
      <param name="quoteEscapeMethod">Specifies whether the quote character
            should be repeated twice when it appears in quoted text.</param>
      <param name="escapeCharacter">The character to use to escape quote characters.</param>
      <param name="autoCategorize">Specifies which columns should be
            automatically converted to categorical columns.</param>
      <param name="maxCategories">The largest number of distinct
            levels for a column to be considered categorical.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startRow" /> is less than 1.
            </exception>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.ColumnDelimiter">
      <summary>
            Gets the character used to separate columns.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.DelimitedTextOptions.Csv">
      <summary>
            Represents the options for reading and writing standard CSV files
            that include column headers.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.CsvForCulture(System.Globalization.CultureInfo,System.Boolean)">
      <summary>
            Represents the options for reading and writing CSV files
            using the specified culture's list separator.
            </summary>
      <param name="culture">The culture to use.</param>
      <param name="columnHeaders">Specifies whether column headers are included.</param>
    </member>
    <member name="F:Numerics.NET.Data.Text.DelimitedTextOptions.CsvWithoutHeader">
      <summary>
            Represents the options for reading and writing standard CSV files
            that do not include column headers.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.EndOfLine">
      <summary>
            Gets the string used to terminate a line.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.EscapeCharacter">
      <summary>
            Gets the character used to escape quote values.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.MergeConsecutiveDelimiters">
      <summary>
            Gets the character used to separate columns.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.Quote">
      <summary>
            Gets a <see cref="T:Numerics.NET.Data.Text.QuoteUsage" /> value that specifies
            when fields should be quoted.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.QuoteCharacter">
      <summary>
            Gets the character used to quote values.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextOptions.QuoteEscapeMethod">
      <summary>
            Gets the method used to represent the quote character
            in quoted fields.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.DelimitedTextOptions.Tsv">
      <summary>
            Represents the options for reading and writing standard 
            tab-separated values (TSV) files that include column headers.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.DelimitedTextOptions.TsvWithoutHeader">
      <summary>
            Represents the options for reading and writing standard 
            tab-separated values (TSV) files that do not include column headers.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithAutoCategorization(Numerics.NET.Data.AutoCategorization,System.Int32)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.TextOptions.AutoCategorize" />
            and <see cref="P:Numerics.NET.Data.TextOptions.MaxCategories" />
            properties changed to the specified values.
            </summary>
      <param name="autoCategorize">Specifies which columns should be
            automatically converted to categorical columns.</param>
      <param name="maxCategories">The largest number of distinct
            levels for a column to be considered categorical.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithColumnDelimiter(System.Char)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.ColumnDelimiter" />
            property changed to the specified value.
            </summary>
      <param name="columnDelimiter">The new value for 
            the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.ColumnDelimiter" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithEndOfLine(System.String)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.EndOfLine" />
            property changed to the specified value.
            </summary>
      <param name="endOfLine">The new value for 
            the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.EndOfLine" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithEscapeCharacter(System.Char)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.EscapeCharacter" />
            property changed to the specified value.
            </summary>
      <param name="escapeCharacter">The new value for 
            the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.EscapeCharacter" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithQuote(Numerics.NET.Data.Text.QuoteUsage)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.Quote" />
            property changed to the specified value.
            </summary>
      <param name="quote">The new value for 
            the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.Quote" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithQuoteCharacter(System.Char)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.QuoteCharacter" />
            property changed to the specified value.
            </summary>
      <param name="quoteCharacter">The new value for 
            the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.QuoteCharacter" /> property.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextOptions.WithQuoteEscapeMethod(Numerics.NET.Data.Text.QuoteEscapeMethod)">
      <summary>
            Returns an options object with the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.QuoteEscapeMethod" />
            property changed to the specified value.
            </summary>
      <param name="quoteEscapeMethod">The new value for 
            the <see cref="P:Numerics.NET.Data.Text.DelimitedTextOptions.QuoteEscapeMethod" /> property.</param>
    </member>
    <member name="T:Numerics.NET.Data.Text.DelimitedTextStream">
      <summary>
            Represents a data stream in delimited text format.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.DelimitedTextStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.Text.DelimitedTextStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.ReadComplexMatrix``1(System.Boolean)">
      <summary>
            Reads a complex matrix from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.ReadComplexVector``1(System.Boolean)">
      <summary>
            Reads a complex vector from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Write``1(Numerics.NET.Matrix{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex matrix to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Write``1(Numerics.NET.Vector{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex vector to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.DelimitedTextStream.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.Text.FixedWidthTextFile">
      <summary>
            Provides static methods for reading and writing
            files in fixed width text format.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Numerics.NET.Data.Text.FixedWidthTextFile</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.Open(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Opens a data stream in fixed width format for reading.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.Open(System.IO.Stream,System.Int32[])">
      <summary>
            Opens a data stream in fixed width format for reading.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.Open(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Opens a data file in fixed width format for reading.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.Open(System.String,System.Int32[])">
      <summary>
            Opens a data file in fixed width format for reading.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexMatrix``1(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a complex matrix from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexMatrix``1(System.IO.Stream,System.Int32[])">
      <summary>
            Reads a complex matrix from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexMatrix``1(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a complex matrix from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexMatrix``1(System.String,System.Int32[])">
      <summary>
            Reads a complex matrix from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexVector``1(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a complex vector from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexVector``1(System.IO.Stream,System.Int32[])">
      <summary>
            Reads a complex vector from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexVector``1(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a complex vector from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadComplexVector``1(System.String,System.Int32[])">
      <summary>
            Reads a complex vector from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a data frame from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``2(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a data frame from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``1(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions,System.String,System.Boolean)">
      <summary>
            Reads a data frame from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <param name="keyColumn">The name of the column that contains the column keys.</param>
      <param name="dropKeyColumn">If <see langword="true" />, the key column
            is not included in the returned data frame.</param>
      <typeparam name="R">The element type of the key column.</typeparam>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> was not found in the file.</para>
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame(System.IO.Stream,System.Int32[])">
      <summary>
            Reads a data frame from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``2(System.IO.Stream,System.Int32[])">
      <summary>
            Reads a data frame from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``1(System.IO.Stream,System.Int32[],System.String,System.Boolean)">
      <summary>
            Reads a data frame from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <param name="keyColumn">The name of the column that contains the column keys.</param>
      <param name="dropKeyColumn">If <see langword="true" />, the key column
            is not included in the returned data frame.</param>
      <typeparam name="R">The element type of the key column.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="stream" />.</returns>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> was not found in the file.</para>
      </exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a data frame from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``2(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a data frame from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``1(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions,System.String,System.Boolean)">
      <summary>
            Reads a data frame from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <param name="keyColumn">The name of the column that contains the column keys.</param>
      <param name="dropKeyColumn">If <see langword="true" />, the key column
            is not included in the returned data frame.</param>
      <typeparam name="R">The element type of the key column.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> was not found in the file.</para>
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame(System.String,System.Int32[])">
      <summary>
            Reads a data frame from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``2(System.String,System.Int32[])">
      <summary>
            Reads a data frame from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadDataFrame``1(System.String,System.Int32[],System.String,System.Boolean)">
      <summary>
            Reads a data frame from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <param name="keyColumn">The name of the column that contains the column keys.</param>
      <param name="dropKeyColumn">If <see langword="true" />, the key column
            is not included in the returned data frame.</param>
      <typeparam name="R">The element type of the key column.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <para>A column named <paramref name="keyColumn" /> was not found in the file.</para>
      </exception>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadMatrix``1(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a matrix from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadMatrix``1(System.IO.Stream,System.Int32[])">
      <summary>
            Reads a matrix from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadMatrix``1(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a matrix from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadMatrix``1(System.String,System.Int32[])">
      <summary>
            Reads a matrix from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadVector``1(System.IO.Stream,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a vector from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadVector``1(System.IO.Stream,System.Int32[])">
      <summary>
            Reads a vector from a stream in fixed-width text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadVector``1(System.String,Numerics.NET.Data.Text.FixedWidthTextOptions)">
      <summary>
            Reads a vector from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextFile.ReadVector``1(System.String,System.Int32[])">
      <summary>
            Reads a vector from a file in fixed-width text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="T:Numerics.NET.Data.Text.FixedWidthTextOptions">
      <summary>
            Represents the options available when reading and writing
            fixed-width text files.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextOptions.#ctor(System.Int32[],System.IFormatProvider,System.Boolean,System.Boolean,System.Int32,System.Type,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object.
            </summary>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> that is used 
            in the conversion between text and other data types.</param>
      <param name="rowHeaders">Indicates that the first column contains row headers.</param>
      <param name="columnHeaders">Indicates that the first row contains column headers.</param>
      <param name="startRow">An integer specifying the 1-based row which contains the start of the data.</param>
      <param name="decimalType">The type to use for numbers containing decimals.</param>
      <param name="inferenceRows">The number of rows to use to infer the types
            of the columns.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextOptions.#ctor(System.Int32[],System.IFormatProvider,System.Boolean,System.Boolean,System.Int32,System.Type,System.Int32,Numerics.NET.Data.AutoCategorization,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Numerics.NET.Data.Text.FixedWidthTextOptions" /> object.
            </summary>
      <param name="columnBreaks">An integer array containing the zero-based indexes of the column breaks on each row.</param>
      <param name="formatProvider">An <see cref="T:System.IFormatProvider" /> that is used 
            in the conversion between text and other data types.</param>
      <param name="rowHeaders">Indicates that the first column contains row headers.</param>
      <param name="columnHeaders">Indicates that the first row contains column headers.</param>
      <param name="startRow">An integer specifying the 1-based row which contains the start of the data.</param>
      <param name="decimalType">The type to use for numbers containing decimals.</param>
      <param name="inferenceRows">The number of rows to use to infer the types
            of the columns.</param>
      <param name="autoCategorize">Specifies which columns should be
            automatically converted to categorical columns.</param>
      <param name="maxCategories">The largest number of distinct
            levels for a column to be considered categorical.</param>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextOptions.GetColumnBreaks">
      <summary>
            Returns an array containing the positions of the column breaks.
            </summary>
      <returns>An integer array containing the zero-based positions where each column begins.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextOptions.WithColumnBreaks(System.Int32[])">
      <summary>
            Returns an options object with the specified positions of the column breaks.
            </summary>
      <param name="columnBreaks">An integer array containing the zero-based positions where each column begins.</param>
      <remarks>
        <para>The positions must be supplied in ascending order.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="columnBreaks" /> is <see langword="null" />.</exception>
    </member>
    <member name="T:Numerics.NET.Data.Text.FixedWidthTextStream">
      <summary>
            Represents a data file in fixed-width text format.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.FixedWidthTextStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.FixedWidthTextStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.Text.FixedWidthTextStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.ReadComplexMatrix``1(System.Boolean)">
      <summary>
            Reads a complex matrix from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.ReadComplexVector``1(System.Boolean)">
      <summary>
            Reads a complex vector from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Write``1(Numerics.NET.Matrix{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex matrix to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Write``1(Numerics.NET.Vector{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex vector to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.FixedWidthTextStream.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.Text.MatrixMarketFile">
      <summary>
            Provides static methods for reading and writing
            files in Matrix Market format.
            </summary>
      <remarks>
        <para>see http://math.nist.gov/MatrixMarket/formats.html for more information.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Append(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Opens a data stream in delimited-text format for writing.
            </summary>
      <param name="stream">The stream to write to.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when writing the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.MatrixMarketStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Create(System.String,Numerics.NET.Data.TextOptions)">
      <summary>
            Creates a data file in delimited text format for writing.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when writing the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.MatrixMarketStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Open(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Opens a data stream in Matrix Market format for reading.
            </summary>
      <param name="stream">The stream to read the data from.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.MatrixMarketStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Open(System.String,Numerics.NET.Data.TextOptions)">
      <summary>
            Opens a data file in Matrix Market format for reading.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>A <see cref="T:Numerics.NET.Data.Text.MatrixMarketStream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadComplexMatrix``1(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a complex matrix from a stream in Matrix Market format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadComplexMatrix``1(System.String,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a complex matrix from a file in Matrix Market format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadComplexVector``1(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a complex vector from a stream in Matrix Market format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadComplexVector``1(System.String,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a complex vector from a file in Matrix Market format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadDataFrame(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a data frame from a stream in Matrix Market format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadDataFrame``2(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a data frame from a stream in Matrix Market format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>The data frame that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadMatrix``1(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a matrix from a stream in Matrix Market format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The matrix that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadMatrix``1(System.String,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a matrix from a file in Matrix Market format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored matrix does not have
            to match the element type of the returned matrix.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadVector``1(System.IO.Stream,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a vector from a stream in Matrix Market format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The vector that was read from the stream
            pointed to by <paramref name="stream" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.ReadVector``1(System.String,Numerics.NET.Data.TextOptions)">
      <summary>
            Reads a vector from a file in Matrix Market format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>The data frame that was read from the file
            pointed to by <paramref name="path" />.</returns>
      <remarks>
        <para>The element type of the stored vector does not have
            to match the element type of the returned vector.
            However, casting values from this type to
            type <typeparamref name="T" /> must succeed.</para>
      </remarks>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.IO.Stream,Numerics.NET.Matrix{Numerics.NET.Complex{``0}},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a complex matrix from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="matrix">The matrix to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.IO.Stream,Numerics.NET.Matrix{``0},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a matrix from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="matrix">The matrix to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.IO.Stream,Numerics.NET.Vector{Numerics.NET.Complex{``0}},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a complex vector from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="vector">The vector to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.IO.Stream,Numerics.NET.Vector{``0},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a vector from a stream in delimited text format.
            </summary>
      <param name="stream">A stream.</param>
      <param name="vector">The vector to write to the stream.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.String,Numerics.NET.Matrix{Numerics.NET.Complex{``0}},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a complex matrix to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="matrix">The matrix to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.String,Numerics.NET.Matrix{``0},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a matrix to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="matrix">The matrix to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.String,Numerics.NET.Vector{Numerics.NET.Complex{``0}},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a complex vector to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="vector">The vector to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketFile.Write``1(System.String,Numerics.NET.Vector{``0},Numerics.NET.Data.TextOptions)">
      <summary>
            Writes a vector to a file in delimited text format.
            </summary>
      <param name="path">The path to the file.</param>
      <param name="vector">The vector to write to the file.</param>
      <param name="options">A <see cref="T:Numerics.NET.Data.TextOptions" /> object
            that specifies the options to use when reading the file.</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <exception cref="T:System.IO.FileNotFoundException">
            The specified file does not exist.</exception>
    </member>
    <member name="T:Numerics.NET.Data.Text.MatrixMarketStream">
      <summary>
            Creates matrices from Matrix Market files.
            </summary>
      <remarks>
        <para>see http://math.nist.gov/MatrixMarket/formats.html for more information.</para>
      </remarks>
    </member>
    <member name="P:Numerics.NET.Data.Text.MatrixMarketStream.CanRead">
      <summary>
            Gets whether the file can be read from.
            </summary>
    </member>
    <member name="P:Numerics.NET.Data.Text.MatrixMarketStream.CanWrite">
      <summary>
            Gets whether the file can be written to.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Dispose(System.Boolean)">
      <summary>
            Releases resources.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Numerics.NET.Data.Text.MatrixMarketStream</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Flush">
      <summary>
            Causes any buffered data to be written to the underlying data store.
            </summary>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.ReadComplexMatrix``1(System.Boolean)">
      <summary>
            Reads a complex matrix from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The matrix that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.ReadComplexVector``1(System.Boolean)">
      <summary>
            Reads a complex vector from the stream.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
      <returns>The vector that was read from the stream.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.ReadDataFrame``2">
      <summary>
            Reads the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
      <returns>A data frame containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.ReadMatrix``1(System.Boolean)">
      <summary>
            Reads the two-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the matrix.</typeparam>
      <returns>A matrix containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.ReadVector``1(System.Boolean)">
      <summary>
            Reads the one-dimensional array at the current position in the file.
            </summary>
      <param name="strict">Specifies whether the element type
            should be matched exactly (<see langword="true" />), or whether
            conversions are allowed (<see langword="false" />).</param>
      <typeparam name="T">The element type of the vector.</typeparam>
      <returns>A vector containing the data.</returns>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Write``2(Numerics.NET.DataAnalysis.DataFrame{``0,``1})">
      <summary>
            Writes the data frame at the current position in the file.
            </summary>
      <typeparam name="R">The type of the row keys of the data frame.</typeparam>
      <typeparam name="C">The type of the column keys of the data frame.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Write``1(Numerics.NET.Matrix{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex matrix to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Write``1(Numerics.NET.Matrix{``0})">
      <summary>
            Writes the two-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the matrix.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Write``1(Numerics.NET.Vector{Numerics.NET.Complex{``0}})">
      <summary>
            Writes a complex vector to the stream.
            </summary>
      <typeparam name="T">The type of the real and imaginary parts
            of the element type.</typeparam>
    </member>
    <member name="M:Numerics.NET.Data.Text.MatrixMarketStream.Write``1(Numerics.NET.Vector{``0})">
      <summary>
            Writes the one-dimensional array at the current position in the file.
            </summary>
      <typeparam name="T">The element type of the vector.</typeparam>
    </member>
    <member name="T:Numerics.NET.Data.Text.QuoteEscapeMethod">
      <summary>
            Enumerates the ways the quote character may be represented
            when it appears in a quoted string.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.QuoteEscapeMethod.Double">
      <summary>
            The quote character is represented by two successive
            quote characters, similar to how quotes work 
            in strings in Visual Basic .NET. This is the default.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.QuoteEscapeMethod.EscapeCharacter">
      <summary>
            The quote character is escaped by prefixing it with
            the designated escape character.
            </summary>
    </member>
    <member name="T:Numerics.NET.Data.Text.QuoteUsage">
      <summary>
            Enumerates the ways values may be quoted
            when writing delimited text files.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.QuoteUsage.AsNeeded">
      <summary>
            Values are quoted only when necessary.
            This is the default.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.QuoteUsage.AsNeededForColumnType">
      <summary>
            All values in a column are quoted when 
            some possible values of the type of the column require it.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.QuoteUsage.Always">
      <summary>
            Values are always quoted.
            </summary>
    </member>
    <member name="F:Numerics.NET.Data.Text.QuoteUsage.Never">
      <summary>
            Values are never quoted. Note that this may
            cause the resulting file to be invalid.
            </summary>
    </member>
  </members>
</doc>